{"version":3,"file":"static/js/440.fde8302d.chunk.js","mappings":"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","sources":["screens/sales-report/index.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport Breadcrumbs from \"../../components/Breadcrumbs\";\r\nimport {\r\n  Table,\r\n  Space,\r\n  Input,\r\n  Button,\r\n  Avatar,\r\n  Upload,\r\n} from \"antd\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport { LiaProductHunt } from \"react-icons/lia\";\r\nimport { usePostFile, useFetchByLoad } from \"../../contexts\";\r\n\r\nconst resource = \"products\";\r\n\r\nexport default function ProductList() {\r\n  const [detail, setDetail] = useState<any>(null);\r\n  const [search, setSearch] = useState<string>(\"\");\r\n\r\n  // File upload\r\n  const { create, data: fileData, loading: fileLoading } = usePostFile();\r\n\r\n  // Data fetching\r\n  const [query, setQuery] = useState({ skip: 0, take: 10, search: \"\" });\r\n  const { fetch, data, loading } = useFetchByLoad();\r\n\r\n  useEffect(() => {\r\n    fetch({ url: resource, query: JSON.stringify(query) });\r\n  }, [query, fileData]);\r\n\r\n  const refreshData = () => {\r\n    fetch({ url: resource, query: JSON.stringify(query) });\r\n    setDetail(null);\r\n  };\r\n\r\n  const calculateTotalQuantity = (data: any) => {\r\n    let totalQuantity = 0;\r\n    if (data) {\r\n      data.forEach((item: any) => {\r\n        totalQuantity += parseInt(item.qty) - parseInt(item.laps);\r\n      });\r\n    }\r\n    return totalQuantity;\r\n  };\r\n\r\n  const [csvData, setCsvData] = useState<any[]>([]);\r\n\r\n  const downloadCsv = () => {\r\n    fetch({ url: \"allproduct\", query: JSON.stringify(\"\") });\r\n    const stockData = data?.data?.filter((item: any) => item.stores.length > 0);\r\n    if (data?.data?.length > 10 && stockData?.length > 0) {\r\n      const csvDataFormatted = stockData.map((item: any) => {\r\n        const storeInfo = item.stores.map((store: any) => {\r\n          return `Location: ${store.location}, Quantity: ${store.qty}, Laps: ${store.laps}`;\r\n        }).join(\"\\n\");\r\n        return {\r\n          Title: item.title || \"\",\r\n          EanBarcode: item.ean || \"\",\r\n          Price: item.price || \"\",\r\n          TotalStock: calculateTotalQuantity(item.stores) || \"\",\r\n          SellingPrice: item.minSellingPrice || \"\",\r\n          SupplierRef: item.supplierRef || \"\",\r\n          Platform: item.platform || \"\",\r\n          StoreInfo: storeInfo,\r\n        };\r\n      });\r\n      setCsvData(csvDataFormatted);\r\n    } else {\r\n      console.log(\"No data to export\");\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Image\",\r\n      dataIndex: \"images\",\r\n      render: (images: string[]) => {\r\n        const firstImage = images && images.length > 0 ? images[0] : null;\r\n        return firstImage ? (\r\n          <Avatar shape=\"square\" src={firstImage} />\r\n        ) : (\r\n          <LiaProductHunt size={30} />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Product Name\",\r\n      dataIndex: \"title\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"Ean Barcode\",\r\n      dataIndex: \"ean\",\r\n      sorter: true,\r\n    },\r\n   \r\n    {\r\n      title: \"platform\",\r\n      dataIndex: \"\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"Sold Amount\",\r\n      dataIndex: \"\",\r\n      sorter: true,\r\n    },\r\n   \r\n    {\r\n      title: \"Sold Qty\",\r\n      dataIndex: \"\",\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: \"InStock Qty\",\r\n      dataIndex: \"stores\",\r\n      render: (stores: any) => calculateTotalQuantity(stores),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs pageName=\"Products\" />\r\n      <div className=\"headerRight\">\r\n        <Space>\r\n          <Button onClick={downloadCsv} type=\"primary\">\r\n            <CSVLink data={csvData} filename={\"stock_product.csv\"}>\r\n              Download Stock CSV\r\n            </CSVLink>\r\n          </Button>\r\n\r\n          <Upload\r\n            showUploadList={false}\r\n            customRequest={({ file }) => create(\"products/import_img\", file)}\r\n          >\r\n            <Button\r\n              type=\"primary\"\r\n              icon={fileLoading ? <LoadingOutlined /> : <PlusOutlined />}\r\n            >\r\n              Import Images\r\n            </Button>\r\n          </Upload>\r\n          <Upload\r\n            showUploadList={false}\r\n            customRequest={({ file }) => create(\"products/import\", file)}\r\n          >\r\n            <Button\r\n              type=\"primary\"\r\n              icon={fileLoading ? <LoadingOutlined /> : <PlusOutlined />}\r\n            >\r\n              Import File\r\n            </Button>\r\n          </Upload>\r\n        </Space>\r\n      </div>\r\n\r\n      <div className=\"viewDetails\">\r\n        <Input\r\n          autoFocus\r\n          placeholder=\"Title / Barcode / Scan code / Supplier Ref / Brand / Supplier / Location\"\r\n          value={search}\r\n          onChange={(e) => {\r\n            const searchValue = e.target.value;\r\n            setSearch(searchValue);\r\n            setQuery((prevQuery) => ({ ...prevQuery, search: searchValue }));\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <Table\r\n        className=\"mainTable\"\r\n        loading={loading}\r\n        dataSource={data?.data ?? []}\r\n        columns={columns}\r\n        pagination={{\r\n          showQuickJumper: true,\r\n          total: data?.count ?? 0,\r\n          onChange: (page, pageSize) => {\r\n            setQuery((prevQuery) => ({\r\n              ...prevQuery,\r\n              skip: (page - 1) * pageSize,\r\n              take: pageSize,\r\n            }));\r\n          },\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"names":["resource","ProductList","_data$data3","_data$count","detail","setDetail","useState","search","setSearch","create","data","fileData","loading","fileLoading","usePostFile","query","setQuery","skip","take","fetch","useFetchByLoad","useEffect","url","JSON","stringify","calculateTotalQuantity","totalQuantity","forEach","item","parseInt","qty","laps","csvData","setCsvData","columns","title","dataIndex","render","images","firstImage","length","_jsx","Avatar","shape","src","LiaProductHunt","size","sorter","stores","_jsxs","_Fragment","children","Breadcrumbs","pageName","className","Space","Button","onClick","downloadCsv","_data$data","_data$data2","stockData","filter","csvDataFormatted","map","storeInfo","store","concat","location","join","Title","EanBarcode","ean","Price","price","TotalStock","SellingPrice","minSellingPrice","SupplierRef","supplierRef","Platform","platform","StoreInfo","console","log","type","CSVLink","filename","Upload","showUploadList","customRequest","_ref","file","icon","LoadingOutlined","PlusOutlined","_ref2","Input","autoFocus","placeholder","value","onChange","e","searchValue","target","prevQuery","Table","dataSource","pagination","showQuickJumper","total","count","page","pageSize"],"sourceRoot":""}